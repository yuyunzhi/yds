{
  "compilerOptions": {
    "target": "es6", // 指定ECMAScript目标版本 "ES3"（默认）， "ES5"， "ES6"/ "ES2015"， "ES2016"， "ES2017"或 "ESNext"。
    "module": "esnext", // 指定生成哪个模块系统代码： "None"， "CommonJS"， "AMD"， "System"， "UMD"， "ES6"或 "ES2015"。
    "strict": true, // 启用所有严格类型检查选项。
    "jsx": "preserve", // 在 .tsx文件里支持JSX： "React"或 "Preserve"。查看 JSX。
    "importHelpers": true, // 从 tslib 导入辅助工具函数（比如 __extends， __rest等）
    "moduleResolution": "node", // 决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）。查看 https://www.tslang.cn/docs/handbook/module-resolution.html 了解详情。
    "experimentalDecorators": true, // 启用实验性的ES装饰器。
    "esModuleInterop": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "allowJs": true, // 允许编译javascript文件。
    "removeComments": true, // 删除所有注释，除了以 /!*开头的版权信息。
    "noUnusedLocals": true, // 若有未使用的局部变量则抛错。
    "noImplicitAny": false, // 在表达式和声明上有隐含的 any类型时报错。
    "strictNullChecks": false, // 在严格的 null检查模式下， null和 undefined值不包含在任何类型里，只允许用它们自己和 any来赋值（有个例外， undefined可以赋值到 void）。
    "sourceMap": true, // 生成相应的 .map文件
    "baseUrl": ".", // 解析非相对模块名的基准目录。查看 https://www.tslang.cn/docs/handbook/module-resolution.html#base-url 了解详情。
    "paths": {
      "@/*": ["./src/*"]
    },
    "types": [ // 要包含的类型声明文件名列表。查看 https://www.tslang.cn/docs/handbook/tsconfig-json.html#types-typeroots-and-types 了解详细信息。
      "node"
    ],
    "typeRoots": ["./types"], // 要包含的类型声明文件名列表。查看 https://www.tslang.cn/docs/handbook/tsconfig-json.html#types-typeroots-and-types 了解详细信息。
    "lib": [ // 编译过程中需要引入的库文件的列表。
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ],
    "skipLibCheck": true, // 忽略所有的声明文件（ *.d.ts）的类型检查。
    "forceConsistentCasingInFileNames": true, // 禁止对同一个文件的不一致的引用。
    "resolveJsonModule": true, // Include modules imported with .json extension.
    "isolatedModules": true, // 将每个文件作为单独的模块（与“ts.transpileModule”类似）
    "noEmit": true // 不生成输出文件。
  },
  "include": [
    "types/*.d.ts",
    "src/**/*.ts",
    "src/**/*.tsx",
    "tests/**/*.ts",
    "tests/**/*.tsx",
    "build.ts",
    "dev.ts"
  ],
  "exclude": [
    "node_modules",
    "src/api/**/*.ts",
    "src/routers"
  ]
}
